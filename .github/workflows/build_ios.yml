name: Build iOS
on:
  workflow_dispatch:
  workflow_call:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - precision: single
            arch: arm64
            ios_precision_extension:
            artifact: iOS
          - precision: double
            arch: arm64
            ios_precision_extension: .double
            artifact: iOS-double
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install AutoConf, AutoMake and LibTool # Needed for autogen.sh
        run: brew install autoconf automake libtool

      - name: Download Opus Models
        working-directory: ./thirdparty/opus
        run: ./autogen.sh

      - name: Create Opus build dir
        working-directory: ./thirdparty/opus
        run: mkdir build

      - name: Configure Opus
        working-directory: ./thirdparty/opus/build
        run: cmake .. -G "Unix Makefiles" -DCMAKE_SYSTEM_NAME=iOS -DCMAKE_OSX_ARCHITECTURES=arm64 -DCMAKE_BUILD_TYPE=Release -DOPUS_BUILD_PROGRAMS=ON -DBUILD_TESTING=ON -DCMAKE_POSITION_INDEPENDENT_CODE=ON

      - name: Build Opus
        working-directory: ./thirdparty/opus/build
        run: cmake --build . -j 2 --config Release

      - name: ðŸ”— GDExtension Build
        uses: godotengine/godot-cpp-template/.github/actions/build@main
        with:
          platform: ios
          arch: ${{ matrix.arch }}
          float-precision: ${{ matrix.precision }}
          build-target-type: template_release

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Godot_Opus-${{ matrix.artifact }}
          path: |
            ${{ github.workspace }}/bin/**/libgodot_opus.ios.template_release${{ matrix.ios_precision_extension }}.arm64.framework/**
          if-no-files-found: error
